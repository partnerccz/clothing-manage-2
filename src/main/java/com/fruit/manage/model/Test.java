package com.fruit.manage.model;

import com.fruit.manage.model.base.BaseTest;
import com.fruit.manage.util.DataResult;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.IAtom;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import org.apache.log4j.Logger;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Test extends BaseTest<Test> {
	public static final Test dao = new Test().dao();
	public static final int STATUS_USE = 1;
	public static final int STATUS_UNUSED = 0;
	public static final int STATUS_DELETE = -1;
	private Logger log = Logger.getLogger(getClass());

	//分页查询数据
	public Page<Record> page(Integer pageNum, Integer pageSize, Integer id, String testname, String orderProp, String orderType) {
		if (pageNum == null || pageNum <= 0) {
			pageNum = 1;
		}
		if (pageSize == null || pageSize <= 0) {
			pageSize = 100;
		}
		if (pageSize > 1000) {
			pageSize = 1000;
		}
		String selectSql = "select id,testname,createtime  ";
		List<Object> params = new ArrayList<>();
		StringBuilder sql = new StringBuilder("FROM test WHERE 1=1 ");
		if (id != null) {
			sql.append("AND id=? ");
			params.add(id);
		}
		if (StrKit.notBlank(testname)) {
			sql.append("AND testname like ? ");
			params.add("%" + testname + "%");
		}


		return Db.paginate(pageNum, pageSize, selectSql, sql.toString(), params.toArray());
	}

	//添加数据
	public boolean save(Test test){
	    return Db.tx(new IAtom(){
	        @Override
            public boolean run() throws SQLException {
	        	if(test.getId()!=null){
					return test.update();
				}else{
					test.setCreatetime(new Date());
					return test.save();
				}
            }
        });
    }

    //根据数据Id获取数据对象
    public Test getTestById(Integer id){
		String sql="select id,testname,createtime from test where id=?";
		return  findFirst(sql,id);
	}

	//删除数据
	public DataResult<Object> delete(String [] ids){
		if(ids == null || ids.length == 0){
			return new DataResult<>("没有符合条件的数据可删除");
		}
		log.info("删除数据：ids="+StrKit.join(ids));
		List<Object> params = new ArrayList<>();
		StringBuffer sqlParams = new StringBuffer();
		for(String id : ids){
			if(StrKit.isBlank(id)){
				continue;
			}
			params.add(id);
			sqlParams.append("?,");
		}
		if(params.size() == 0){
			return new DataResult<>("没有符合条件的数据可删除");
		}
		sqlParams.deleteCharAt(sqlParams.length() - 1);
		int changeRow = Db.update("delete from test where id in ("+sqlParams.toString()+")", params.toArray());
		log.info("删除数据成功："+changeRow);
		return DataResult.getSuccessData(null);
	}
}
